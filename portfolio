import React from 'react';

// Icon components (simplified for direct inclusion, in a real app you'd import from lucide-react)
const Phone = () => <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="lucide lucide-phone"><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.63A2 2 0
0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"/></svg>;
const Mail = () => <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="lucide lucide-mail"><rect width="20" height="16" x="2" y="4" rx="2"/><path d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"/></svg>;
const MapPin = () => <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="lucide lucide-map-pin"><path d="M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z"/><circle cx="12" cy="10" r="3"/></svg>;
const Linkedin = () => <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="lucide lucide-linkedin"><path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"/><rect width="4" height="12" x="2" y="9"/><circle cx="4" cy="4" r="2"/></svg>;
const Github = () => <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="lucide lucide-github"><path d="M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.1.47-2.48 1-3.5 0 0-1 0-2 1-1.2-0.3-2.4-0.5-3.8-0.5-1.4 0-2.6 0.2-3.8 0.5C6 5 5 5 5 5c.47 1.02.86 2.3 1 3.5C6 14 9 16 12 16.5c-1 .5-1.5 1.5-1.5 3V22"/><path d="M12 2A10 10 0 0 0 2 12c0 4.42 2.87 8.17 6.81 9.5C9.62 21.92 10 21.49 10 21.15v-1.87c-3.14.7-4.4-1.66-4.4-1.66-.57-1.2-1.38-1.55-1.38-1.55-1.13-.78.08-.77.08-.77 1.25.09 1.92 1.29 1.92 1.29 1.1 1.87 2.87 1.34 3.58 1.03.1-.8.4-1.34.7-1.65C9.1 14.73 7.7 14.2 7.7 11.95c0-2.07 1.19-3.75 2.64-4.29C10.65 7.1 10.98 7 11.3 7c.66 0 1.25.27 1.68.73.5-.13 1-.22 1.5-.22.43-.46.99-.73 1.65-.73.32 0 .65.1 1 .28 1.45.54 2.64 2.22 2.64 4.29 0 2.25-1.4 2.78-2.1 3.08.3.3.6.7.6 1.3v2.79c0 .34.38.77 1 .69C20.13 20.17 23 16.42 23 12A10 10 0 0 0 12 2Z"/></svg>;
const ChevronDown = () => <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="lucide lucide-chevron-down"><path d="m6 9 6 6 6-6"/></svg>;
const ArrowRight = () => <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="lucide lucide-arrow-right"><path d="M5 12h14"/><path d="m12 5 7 7-7 7"/></svg>;
const Briefcase = () => <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="lucide lucide-briefcase"><rect width="20" height="14" x="2" y="7" rx="2" ry="2"/><path d="M16 21V5a2 2 0 0 0-2-2h-4a2 2 0
0 0-2 2v16"/></svg>;
const GraduationCap = () => <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="lucide lucide-graduation-cap"><path d="M21.43 11.57L12 2.14 2.57 11.57A2 2 0 0 0 2 13v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6a2 2 0 0 0-.57-1.43z"/><path d="M12 2v10.5"/><path d="M16 16c0 1.105-1.79 2-4 2s-4-.895-4-2"/><path d="M12 21a4 4 0 0 0 4-4H8a4 4 0 0 0 4 4z"/></svg>;


// Function to handle smooth scrolling - MOVED OUTSIDE APP COMPONENT
const scrollToSection = (id) => {
  const element = document.getElementById(id);
  if (element) {
    element.scrollIntoView({ behavior: 'smooth' });
  }
};

const App = () => {
  const portfolioData = {
    name: "Rahul Chandeshware",
    profileImage: "https://i.ibb.co/27kXhbYd/Coat-profile-photo-1.png",
    aboutMeImage: "https://i.ibb.co/27kXhbYd/Coat-profile-photo-1.png", 
    contact: {
      phone: "7760778207",
      email: "rahulchandeshware66@gmail.com",
      location: "Bidar, Karnataka",
      calendlyLink: "https://calendly.com/your-username/30min" 
    },
    social: {
      linkedin: "https://linkedin.com/in/rahul-chandeshware",
      github: "https://github.com/rahul-chandeshware",
    },
    heroSummary: "Detail-oriented SDET with expertise in automation testing, API testing, and manual testing",
    professionalSummary: "Detail-oriented Software Development Engineer in Test with strong expertise in automation testing, API testing, and manual testing. Skilled in ensuring quality through meticulous test execution and problem-solving. Possesses a solid understanding of testing frameworks and a commitment to maintaining high standards of software reliability.",
    education: [
      {
        degree: "Software Development Engineer in Test",
        institution: "Masai School, Bengaluru",
        dates: "August 2024 – March 2025",
      },
      {
        degree: "Bachelor of Computer Applications",
        institution: "Gulbarga University, Kalaburagi",
        dates: "June 2022 – September 2025",
      },
    ],
    experience: [
      {
        title: "QA Engineer",
        company: "Evident Capital",
        duration: "April 2025 – Present",
      }
    ],
    skills: {
      technical: [
        { name: "Selenium Java", percentage: 90 },
        { name: "Manual Testing", percentage: 95 },
        { name: "JavaScript", percentage: 85 },
        { name: "Cypress", percentage: 80 },
        { name: "API Testing", percentage: 90 },
      ],
      soft: [
        { name: "Adaptability", percentage: 90 },
        { name: "Teamwork", percentage: 95 },
        { name: "Problem Solving", percentage: 92 },
        { name: "Effective Communication", percentage: 95 },
        { name: "Time Management", percentage: 87 },
      ],
    },
    stats: [
      { value: "0-1", label: "Years of experience" },
      { value: "3+", label: "Projects completed" },
      { value: "2+", label: "Testing in academics" },
      { value: "100%", label: "Commitment to Quality" },
    ],
    projects: [
      {
        name: "Manual Testing Project",
        technologies: ["Manual Testing", "JIRA", "Defect Reporting"],
        image: "", // Removed image
        keyContributions: [
          "Reviewed application requirements to identify key functionalities and workflows.",
          "Developed detailed test cases covering positive and negative scenarios for all features.",
          "Performed manual test execution and recorded defects using JIRA.",
          "Documented issues with detailed reproduction steps, screenshots, and severity levels.",
          "Revalidated fixed bugs to ensure quality.",
        ],
        liveLink: "#",
        githubLink: "https://github.com/Rahulchandeshware",
      },
      {
        name: "Tutorial Ninja Automation",
        technologies: ["Selenium Java", "Cucumber", "BDD"],
        image: "", // Removed image
        keyContributions: [
          "Developed automated test scenarios for the Tutorial Ninja website using Selenium WebDriver and Cucumber, focusing on critical functionalities.",
          "Collaborated with a team to implement Behavior-Driven Development (BDD) testing strategies for a seamless testing process.",
          "Executed and validated test cases for user registration, login, and product search features, identifying algorithmic and logic errors.",
          "Documented test case results and reported issues with detailed reproduction steps to support timely resolution.",
          "Worked closely with developers to ensure comprehensive testing of all functionalities, contributing to improving the software’s quality.",
        ],
        liveLink: "#",
        githubLink: "https://github.com/Rahulchandeshware",
      },
      {
        name: "Automation Testing Framework",
        technologies: ["Selenium Java", "TestNG", "Automation"],
        image: "", // Removed image
        keyContributions: [
          "Developed automated test scenarios for the website using Selenium WebDriver, focusing on critical functionalities.",
          "Collaborated with a team to implement testing strategies for a seamless testing process.",
          "Executed and validated test cases for user registration, login, and product search features, identifying algorithmic and logic errors.",
          "Documented test case results and reported issues with detailed reproduction steps to support timely resolution.",
          "Worked closely with developers to ensure comprehensive testing of all functionalities, contributing to improving the software’s quality.",
        ],
        liveLink: "#",
        githubLink: "https://github.com/Rahulchandeshware",
      },
    ],
  };

  // State for form fields
  const [formData, setFormData] = React.useState({
    name: '',
    email: '',
    subject: '',
    message: '',
  });

  // Handle form input changes
  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prevData) => ({
      ...prevData,
      [name]: value,
    }));
  };

  // Handle form submission
  const handleSubmit = (e) => {
    e.preventDefault();
    console.log('Form submitted:', formData);
    alert('Thank you for your message! I will get back to you soon.');
    setFormData({ name: '', email: '', subject: '', message: '' });
  };


  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-50 via-blue-50 to-indigo-50 font-inter text-gray-800">
      {/* Tailwind CSS CDN - IMPORTANT for local testing, not needed in Canvas */}
      <script src="https://cdn.tailwindcss.com"></script>
      {/* Inter font - IMPORTANT for local testing, not needed in Canvas */}
      <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet" />

      {/* Custom CSS for animations and custom elements */}
      <style>
        {`
        @keyframes fadeIn {
          from { opacity: 0; }
          to { opacity: 1; }
        }

        @keyframes fadeInUp {
          from {
            opacity: 0;
            transform: translateY(20px);
          }
          to {
            opacity: 1;
            transform: translateY(0);
          }
        }

        @keyframes bounce {
          0%, 100% {
            transform: translateY(0);
          }
          50% {
            transform: translateY(-10px);
          }
        }

        .animate-fade-in {
          animation: fadeIn 0.8s ease-out forwards;
        }

        .animate-fade-in-up {
          animation: fadeInUp 0.8s ease-out forwards;
        }

        .animate-bounce-subtle {
          animation: bounce 2s infinite;
        }

        .delay-100 { animation-delay: 0.1s; }
        .delay-200 { animation-delay: 0.2s; }
        .delay-300 { animation-delay: 0.3s; }
        .delay-400 { animation-delay: 0.4s; }
        .delay-500 { animation-delay: 0.5s; }
        .delay-600 { animation-delay: 0.6s; }
        .delay-700 { animation-delay: 0.7s; }
        .delay-800 { animation-delay: 0.8s; }
        .delay-900 { animation-delay: 0.9s; }
        .delay-1000 { animation-delay: 1.0s; }
        .delay-1100 { animation-delay: 1.1s; }
        .delay-1200 { animation-delay: 1.2s; }
        .delay-1300 { animation-delay: 1.3s; }
        .delay-1400 { animation-delay: 1.4s; }
        .delay-1500 { animation-delay: 1.5s; }
        .delay-1600 { animation-delay: 1.6s; }
        .delay-1700 { animation-delay: 1.7s; }
        .delay-1800 { animation-delay: 1.8s; }


        /* Custom styling for skill progress bars */
        .skill-bar-bg {
            background-color: #e0e0e0;
            border-radius: 9999px; /* Tailwind's rounded-full */
            height: 8px; /* Or h-2 */
            overflow: hidden;
        }
        .skill-bar-fill {
            background-color: #8b5cf6; /* Purple-500 */
            height: 100%;
            border-radius: 9999px;
            transition: width 0.5s ease-out;
        }
        `}
      </style>

      {/* Navigation Bar */}
      <nav className="fixed top-0 left-0 right-0 z-50 bg-white bg-opacity-90 backdrop-blur-sm shadow-sm p-4 flex justify-between items-center px-8">
        <div className="text-xl font-bold text-gray-800">Portfolio</div>
        <div className="flex space-x-6">
          <a href="#home" onClick={(e) => { e.preventDefault(); scrollToSection('home'); }} className="text-gray-700 hover:text-purple-600 transition-colors duration-300">Home</a>
          <a href="#about" onClick={(e) => { e.preventDefault(); scrollToSection('about'); }} className="text-gray-700 hover:text-purple-600 transition-colors duration-300">About</a>
          <a href="#projects" onClick={(e) => { e.preventDefault(); scrollToSection('projects'); }} className="text-gray-700 hover:text-purple-600 transition-colors duration-300">Projects</a>
          <a href="#skills" onClick={(e) => { e.preventDefault(); scrollToSection('skills'); }} className="text-gray-700 hover:text-purple-600 transition-colors duration-300">Skills</a>
          <a href="#contact-form" onClick={(e) => { e.preventDefault(); scrollToSection('contact-form'); }} className="text-gray-700 hover:text-purple-600 transition-colors duration-300">Contact</a>
        </div>
      </nav>

      <div className="max-w-6xl mx-auto bg-white shadow-xl rounded-2xl overflow-hidden mt-20 sm:mt-24">

        {/* Hero Section */}
        <section id="home" className="relative flex flex-col items-center justify-center min-h-[calc(100vh-80px)] bg-gradient-to-br from-purple-50 to-blue-50 p-8 text-center rounded-t-2xl animate-fade-in delay-100">
          <img
            src={portfolioData.profileImage}
            alt={portfolioData.name}
            className="w-48 h-48 sm:w-56 sm:h-56 rounded-full border-4 border-white shadow-lg mb-6 animate-fade-in-up delay-200"
            onError={(e) => { e.target.onerror = null; e.target.src = "https://placehold.co/150x150/8a2be2/ffffff?text=RC"; }}
          />
          <p className="text-lg sm:text-xl text-gray-600 mb-2 animate-fade-in-up delay-300">Hi, I'm {portfolioData.name}</p>
          <h1 className="text-3xl sm:text-5xl md:text-6xl font-extrabold text-gray-900 leading-tight mb-4 animate-fade-in-up delay-400">
            Software Development <br className="sm:hidden"/>
            <span className="text-purple-700">Engineer in Test</span>
          </h1>
          <p className="text-base sm:text-lg text-gray-700 max-w-2xl mb-8 animate-fade-in-up delay-500">
            {portfolioData.heroSummary}
          </p>
          <div className="flex flex-col sm:flex-row gap-4 mb-12 animate-fade-in-up delay-600">
            <button
              onClick={() => scrollToSection('projects')}
              className="bg-purple-600 text-white px-8 py-3 rounded-full text-lg font-semibold shadow-lg hover:bg-purple-700 transition-all duration-300 transform hover:scale-105 flex items-center justify-center"
            >
              View Projects <ArrowRight className="ml-2 w-5 h-5" />
            </button>
            <button
              onClick={() => scrollToSection('contact-form')}
              className="bg-white text-purple-600 border border-purple-600 px-8 py-3 rounded-full text-lg font-semibold shadow-lg hover:bg-purple-50 transition-all duration-300 transform hover:scale-105"
            >
              Contact Me
            </button>
          </div>
          <a href="#about" onClick={(e) => { e.preventDefault(); scrollToSection('about'); }} className="absolute bottom-8 animate-bounce-subtle text-gray-600 hover:text-purple-600 transition-colors duration-300">
            <ChevronDown className="w-8 h-8" />
          </a>
        </section>

        <main className="p-6 sm:p-8 space-y-12 sm:space-y-16">

          {/* About Me Section */}
          <section id="about" className="bg-white p-6 rounded-xl shadow-md animate-fade-in-up delay-700">
            <h2 className="text-3xl sm:text-4xl font-bold text-center text-gray-900 mb-8">About Me</h2>
            <p className="text-center text-gray-600 max-w-2xl mx-auto mb-10">
              Detail-oriented Software Development Engineer in Test with strong expertise in automation testing, API testing, and manual testing.
            </p>
            <div className="flex flex-col md:flex-row gap-8 items-center md:items-start">
              <div className="md:w-1/3 flex justify-center animate-fade-in-up delay-800">
                <div className="relative p-2 bg-gradient-to-br from-purple-200 to-blue-200 rounded-xl shadow-lg">
                  <img
                    src={portfolioData.aboutMeImage}
                    alt="About Me"
                    className="w-full h-auto rounded-lg object-cover"
                    onError={(e) => { e.target.onerror = null; e.target.src = "https://placehold.co/300x400/e0e0e0/333333?text=Your+Photo"; }}
                  />
                  {/* Small decorative circles */}
                  <div className="absolute -top-3 -left-3 w-6 h-6 bg-purple-400 rounded-full animate-pulse"></div>
                  <div className="absolute -bottom-3 -right-3 w-6 h-6 bg-blue-400 rounded-full animate-pulse delay-200"></div>
                </div>
              </div>
              <div className="md:w-2/3 space-y-6 animate-fade-in-up delay-900">
                <h3 className="text-2xl font-semibold text-gray-900">Professional Summary</h3>
                <p className="text-gray-700 leading-relaxed">
                  {portfolioData.professionalSummary}
                </p>

                <div className="grid grid-cols-1 sm:grid-cols-2 gap-4 text-gray-700">
                  <div className="flex items-center gap-2">
                    <Briefcase className="w-5 h-5 text-purple-600" />
                    <span>Background: SDET with focus on automation and manual testing</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <MapPin className="w-5 h-5 text-purple-600" />
                    <span>Location: Bengaluru, Karnataka</span>
                  </div>
                </div>

                {portfolioData.experience.length > 0 && (
                  <div className="mt-6">
                    <h3 className="text-xl font-semibold text-gray-900">Experience</h3>
                    {portfolioData.experience.map((exp, index) => (
                      <div key={index} className="flex items-center gap-2 mt-2">
                        <Briefcase className="w-5 h-5 text-blue-600" />
                        <div>
                          <p className="font-medium text-gray-800">{exp.title}</p>
                          <p className="text-gray-600 text-sm">{exp.company} | {exp.duration}</p>
                        </div>
                      </div>
                    ))}
                  </div>
                )}

                <div className="mt-6">
                  <h3 className="text-xl font-semibold text-gray-900">Education</h3>
                  {portfolioData.education.map((edu, index) => (
                    <div key={index} className="flex items-center gap-2 mt-2">
                      <GraduationCap className="w-5 h-5 text-blue-600" />
                      <div>
                        <p className="font-medium text-gray-800">{edu.degree}</p>
                        <p className="text-gray-600 text-sm">{edu.institution} | {edu.dates}</p>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </section>

          {/* My Projects Section */}
          <section id="projects" className="bg-gray-50 p-6 rounded-xl shadow-inner animate-fade-in-up delay-1000">
            <h2 className="text-3xl sm:text-4xl font-bold text-center text-gray-900 mb-4">My Projects</h2>
            <p className="text-center text-gray-600 max-w-2xl mx-auto mb-10">
              A selection of my testing and automation projects
            </p>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {portfolioData.projects.map((project, index) => (
                <div key={index} className="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-xl hover:scale-105 transition-all duration-300 animate-fade-in-up" style={{ animationDelay: `${1.1 + index * 0.1}s` }}>
                  {/* Removed image tag */}
                  <div className="p-5">
                    <div className="flex flex-wrap gap-2 mb-3">
                      {project.technologies.map((tech, i) => (
                        <span key={i} className="bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-0.5 rounded-full">{tech}</span>
                      ))}
                    </div>
                    <h3 className="font-semibold text-xl text-gray-900 mb-2">{project.name}</h3>
                    <p className="text-gray-600 text-sm mb-4">Key Contributions:</p>
                    <ul className="list-disc list-inside text-gray-700 text-sm space-y-1 mb-4">
                      {project.keyContributions.map((point, i) => (
                        <li key={i}>{point}</li>
                      ))}
                    </ul>
                    <div className="flex justify-between items-center text-sm font-medium">
                      <a href={project.liveLink} target="_blank" rel="noopener noreferrer" className="text-purple-600 hover:text-purple-800 flex items-center transition-colors duration-300">
                        View Live <ArrowRight className="ml-1 w-4 h-4" />
                      </a>
                      <a href={project.githubLink} target="_blank" rel="noopener noreferrer" className="text-gray-600 hover:text-gray-800 flex items-center transition-colors duration-300">
                        GitHub <Github className="ml-1 w-4 h-4" />
                      </a>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </section>

          {/* My Skills Section */}
          <section id="skills" className="bg-white p-6 rounded-xl shadow-md relative overflow-hidden animate-fade-in-up delay-1200">
            {/* Decorative blobs */}
            <div className="absolute top-10 -left-10 w-24 h-24 bg-purple-200 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob"></div>
            <div className="absolute bottom-5 -right-5 w-32 h-32 bg-blue-200 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-2000"></div>

            <h2 className="text-3xl sm:text-4xl font-bold text-center text-gray-900 mb-4">My Skills</h2>
            <p className="text-center text-gray-600 max-w-2xl mx-auto mb-10">
              A snapshot of my technical and soft skills
            </p>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-8 mb-12">
              <div className="bg-gray-50 p-5 rounded-lg shadow-sm animate-fade-in-up delay-1300">
                <h3 className="font-semibold text-xl text-gray-900 mb-4">Technical Skills</h3>
                <div className="space-y-4">
                  {portfolioData.skills.technical.map((skill, index) => (
                    <div key={index}>
                      <div className="flex justify-between items-center mb-1">
                        <span className="text-gray-700 text-sm">{skill.name}</span>
                        <span className="text-gray-500 text-xs">{skill.percentage}%</span>
                      </div>
                      <div className="skill-bar-bg">
                        <div className="skill-bar-fill" style={{ width: `${skill.percentage}%` }}></div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
              <div className="bg-gray-50 p-5 rounded-lg shadow-sm animate-fade-in-up delay-1400">
                <h3 className="font-semibold text-xl text-gray-900 mb-4">Soft Skills</h3>
                <div className="space-y-4">
                  {portfolioData.skills.soft.map((skill, index) => (
                    <div key={index}>
                      <div className="flex justify-between items-center mb-1">
                        <span className="text-gray-700 text-sm">{skill.name}</span>
                        <span className="text-gray-500 text-xs">{skill.percentage}%</span>
                      </div>
                      <div className="skill-bar-bg">
                        <div className="skill-bar-fill" style={{ width: `${skill.percentage}%` }}></div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>

            {/* Stats Section */}
            <div className="grid grid-cols-2 lg:grid-cols-4 gap-6 text-center">
              {portfolioData.stats.map((stat, index) => (
                <div key={index} className="bg-purple-50 p-4 rounded-lg shadow-sm animate-fade-in-up" style={{ animationDelay: `${1.5 + index * 0.1}s` }}>
                  <p className="text-3xl font-bold text-purple-700 mb-1">{stat.value}</p>
                  <p className="text-sm text-gray-600">{stat.label}</p>
                </div>
              ))}
            </div>
          </section>

          {/* Get in Touch Form Section */}
          <section id="contact-form" className="bg-gray-50 p-6 rounded-xl shadow-inner animate-fade-in-up delay-1500">
            <h2 className="text-3xl sm:text-4xl font-bold text-center text-gray-900 mb-4">Get In Touch</h2>
            <p className="text-center text-gray-600 max-w-2xl mx-auto mb-10">
              Have a project in mind or want to discuss opportunities? Feel free to reach out!
            </p>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
              {/* Send Me a Message Form */}
              <div className="bg-white p-6 rounded-lg shadow-md animate-fade-in-up delay-1600">
                <h3 className="text-xl font-semibold text-gray-900 mb-4">Send Me a Message</h3>
                <form onSubmit={handleSubmit} className="space-y-4">
                  <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                    <div>
                      <label htmlFor="name" className="sr-only">Name</label>
                      <input
                        type="text"
                        id="name"
                        name="name"
                        value={formData.name}
                        onChange={handleChange}
                        className="w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 text-sm"
                        placeholder="Your Name"
                        required
                      />
                    </div>
                    <div>
                      <label htmlFor="email" className="sr-only">Email</label>
                      <input
                        type="email"
                        id="email"
                        name="email"
                        value={formData.email}
                        onChange={handleChange}
                        className="w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 text-sm"
                        placeholder="Your Email"
                        required
                      />
                    </div>
                  </div>
                  <div>
                    <label htmlFor="subject" className="sr-only">Subject</label>
                    <input
                      type="text"
                      id="subject"
                      name="subject"
                      value={formData.subject}
                      onChange={handleChange}
                      className="w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 text-sm"
                      placeholder="Subject"
                      required
                    />
                  </div>
                  <div>
                    <label htmlFor="message" className="sr-only">Message</label>
                    <textarea
                      id="message"
                      name="message"
                      rows="5"
                      value={formData.message}
                      onChange={handleChange}
                      className="w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 text-sm"
                      placeholder="Your message"
                      required
                    ></textarea>
                  </div>
                  <button
                    type="submit"
                    className="w-full bg-purple-600 text-white px-6 py-3 rounded-md text-lg font-semibold shadow-md hover:bg-purple-700 transition-colors duration-300 transform hover:scale-105"
                  >
                    Send Message
                  </button>
                </form>
              </div>

              {/* Contact Information */}
              <div className="bg-white p-6 rounded-lg shadow-md animate-fade-in-up delay-1700">
                <h3 className="text-xl font-semibold text-gray-900 mb-4">Contact Information</h3>
                <div className="space-y-4 text-gray-700">
                  <p>Currently available for job opportunities in software testing and quality assurance. Feel free to reach out with any questions or job inquiries.</p>
                  <div className="flex items-center gap-3">
                    <MapPin className="w-5 h-5 text-purple-600" />
                    <span>Location: {portfolioData.contact.location}</span>
                  </div>
                  <div className="flex items-center gap-3">
                    <Mail className="w-5 h-5 text-purple-600" />
                    <span>Email: {portfolioData.contact.email}</span>
                  </div>
                  <div className="flex items-center gap-3">
                    <Phone className="w-5 h-5 text-purple-600" />
                    <span>Phone: {portfolioData.contact.phone}</span>
                  </div>
                </div>
                <div className="mt-6">
                  <h3 className="text-xl font-semibold text-gray-900 mb-3">Professional Profiles</h3>
                  <div className="flex gap-4">
                    <a href={portfolioData.social.linkedin} target="_blank" rel="noopener noreferrer" className="text-gray-700 hover:text-purple-600 transition-colors duration-300">
                      <Linkedin className="w-7 h-7" />
                    </a>
                    <a href={portfolioData.social.github} target="_blank" rel="noopener noreferrer" className="text-gray-700 hover:text-purple-600 transition-colors duration-300">
                      <Github className="w-7 h-7" />
                    </a>
                  </div>
                </div>
              </div>
            </div>
          </section>
        </main>


        {/* Footer */}
        <footer className="bg-gray-800 text-white text-center p-4 rounded-b-2xl text-sm sm:text-base animate-fade-in-up delay-1800">
          <div className="flex flex-col sm:flex-row justify-between items-center max-w-4xl mx-auto">
            <p>&copy; {new Date().getFullYear()} {portfolioData.name}. All rights reserved.</p>
            <div className="flex gap-4 mt-2 sm:mt-0">
              <a href="#" className="hover:text-purple-300 transition-colors duration-300">Privacy Policy</a>
              <a href="#" className="hover:text-purple-300 transition-colors duration-300">Terms of Service</a>
              <a href="#" className="hover:text-purple-300 transition-colors duration-300">Cookie Policy</a>
            </div>
          </div>
        </footer>
      </div>
    </div>
  );
};

export default App;
